import{s as m,u as _,r as d}from"./button.esm.53a344b7.js";import{s as h}from"./checkbox.esm.dd7c9f76.js";import{h as i,o as b,c as v,e,j as r,b as o,u as f,k as c}from"./index.12ee6e46.js";import{_ as $}from"./0plugin-vue0export-helper.15deba66.js";const w={name:"Instructions",components:{Button:m,Checkbox:h},setup:()=>({v$:_()}),data(){return{read_accept:null,understand_accept:null,submitted:!1}},validations(){return{read_accept:{required:d},understand_accept:{required:d}}},methods:{handleSubmit(t){if(this.submitted=!0,t)this.$router.push("letters0");else return}}},k={class:"main-wrapper"},y=e("div",{class:"instructions-wrapper"},[e("h1",null,"Instructions"),e("p",null,[c(" The goal for you as a participant is, to answer the following trials as fast and correctly as possible. Your response time and accuracy are measured. The experiment contains XX trials. "),e("br"),c(),e("br"),c(" You must decide between two lines, which consist of letters, numbers as symbols or numbers as words. Which kind of lines you see is randomly chosen. Please choose the answer with the most elements. To choose a line, you can click at the picture. Below you can see an example for every kind of trial. The correct answer is outlined. ")])],-1),V={class:"multiple-checkbox-wrapper"},x={class:"checkbox-wrapper"},B={class:"checkbox-wrapper"},I={class:"button-wrapper"};function C(t,s,T,S,a,u){const l=i("Checkbox"),p=i("Button");return b(),v("main",k,[e("form",{onSubmit:s[2]||(s[2]=f(n=>u.handleSubmit(!t.v$.$invalid),["prevent"]))},[y,e("div",V,[e("div",x,[r(l,{id:"read_accept",name:"read_accept",value:"Read_accept",modelValue:t.v$.read_accept.$model,"onUpdate:modelValue":s[0]||(s[0]=n=>t.v$.read_accept.$model=n),class:o({"p-invalid":t.v$.read_accept.$invalid&&a.submitted})},null,8,["modelValue","class"]),e("label",{for:"read_accept",class:o(["checkbox-label",{"p-error":t.v$.read_accept.$invalid&&a.submitted}])},"I can read the examples*",2)]),e("div",B,[r(l,{id:"understand_accept",name:"understand_accept",value:"Understand_accept",modelValue:t.v$.understand_accept.$model,"onUpdate:modelValue":s[1]||(s[1]=n=>t.v$.understand_accept.$model=n),class:o({"p-invalid":t.v$.understand_accept.$invalid&&a.submitted})},null,8,["modelValue","class"]),e("label",{for:"understand_accept",class:o(["checkbox-label",{"p-error":t.v$.understand_accept.$invalid&&a.submitted}])},"I understand what to do and want to continue*",2)])]),e("div",I,[r(p,{type:"submit",label:"Start",class:"mt-2"})])],32)])}const Y=$(w,[["render",C]]);export{Y as default};
